<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>채팅 앱</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #e0e0e0;
            margin: 0;
        }

        .container {
            background-color: #e0e0e0;
            border-radius: 20px;
            box-shadow: 10px 10px 30px #bebebe, -10px -10px 30px #ffffff;
            width: 400px;
            padding: 20px;
            box-sizing: border-box;
            display: none; /* 기본적으로 모든 페이지 숨김 */
        }

        .container.active {
            display: block; /* 활성화된 페이지만 표시 */
        }

        .header {
            text-align: center;
            margin-bottom: 20px;
        }

        .header h2 {
            font-size: 28px;
            color: #333;
        }

        .chat-list {
            list-style: none;
            padding: 0;
            margin: 0;
            max-height: 300px;
            overflow-y: auto; /* 스크롤 가능 */
        }

        .chat-item {
            background-color: #e0e0e0;
            padding: 15px;
            border-radius: 20px;
            margin: 10px 0;
            box-shadow: 5px 5px 15px #bebebe, -5px -5px 15px #ffffff;
            cursor: pointer;
            display: flex;
            align-items: center;
            transition: box-shadow 0.3s ease;
        }

        .chat-item:hover {
            box-shadow: 5px 5px 15px #dcdcdc, -5px -5px 15px #ffffff;
        }

        .chat-avatar {
            width: 50px;
            height: 50px;
            background-color: #bebebe;
            border-radius: 50%;
            margin-right: 15px;
        }

        .chat-info {
            flex-grow: 1;
        }

        .chat-info h3 {
            margin: 0;
            font-size: 18px;
            color: #333;
        }

        .chat-info p {
            margin: 5px 0 0 0;
            font-size: 14px;
            color: #666;
        }

        .new-chat-btn, .add-friend-btn {
            background-color: #e0e0e0;
            color: #333;
            padding: 15px;
            border: none;
            border-radius: 20px;
            width: 100%;
            margin-top: 20px;
            cursor: pointer;
            box-shadow: 5px 5px 15px #bebebe, -5px -5px 15px #ffffff;
            font-size: 18px;
            font-weight: bold;
        }

        .new-chat-btn:hover, .add-friend-btn:hover {
            background-color: #dcdcdc;
        }

        .navigation {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .nav-btn {
            background-color: #e0e0e0;
            color: #333;
            padding: 10px;
            border: none;
            border-radius: 20px;
            cursor: pointer;
            flex: 1;
            margin: 0 5px;
            font-weight: bold;
        }

        .nav-btn:hover {
            background-color: #dcdcdc;
        }

        .friend-input {
            display: flex;
            margin: 10px 0;
        }

        .friend-input input {
            flex-grow: 1;
            padding: 10px;
            border-radius: 20px;
            border: none;
            box-shadow: inset 5px 5px 15px #bebebe, inset -5px -5px 15px #ffffff;
        }

        .friend-input button {
            padding: 10px;
            border: none;
            border-radius: 20px;
            margin-left: 10px;
            background-color: #e0e0e0;
            color: #333;
            cursor: pointer;
        }

        .friend-input button:hover {
            background-color: #dcdcdc;
        }

        .my-page {
            text-align: center;
        }

        .chat-window {
            display: none; /* 대화창 기본 숨김 */
        }

        .back-button {
            background-color: transparent;
            border: none;
            font-size: 20px;
            cursor: pointer;
            align-self: flex-start;
            margin-bottom: 20px;
        }

        .messages {
            list-style: none;
            padding: 0;
            margin: 0;
            max-height: 300px;
            overflow-y: auto; /* 스크롤 가능 */
        }

        .message-item {
            padding: 10px;
            margin: 5px 0;
            border-radius: 10px;
            background-color: #fff;
            box-shadow: 1px 1px 5px #ccc;
        }

        .message-input {
            display: flex;
            margin-top: 10px;
        }

        .message-input input {
            flex-grow: 1;
            padding: 10px;
            border-radius: 20px;
            border: none;
            box-shadow: inset 5px 5px 15px #bebebe, inset -5px -5px 15px #ffffff;
        }

        .message-input button {
            padding: 10px;
            border: none;
            border-radius: 20px;
            margin-left: 10px;
            background-color: #e0e0e0;
            color: #333;
            cursor: pointer;
        }

        .message-input button:hover {
            background-color: #dcdcdc;
        }

    </style>
</head>
<body>

    <!-- 친구 목록 페이지 -->
    <div class="container active" id="friends-list">
        <div class="header">
            <h2>친구 목록</h2>
        </div>
        <div class="friend-input">
            <input type="text" id="friend-name" placeholder="친구 이름">
            <button class="add-friend-btn" onclick="addFriend()">추가</button>
        </div>
        <ul class="chat-list" id="friends"></ul>
        <button class="new-chat-btn" onclick="startGroupChat()">그룹 채팅 시작</button>
        <div class="navigation">
            <button class="nav-btn" onclick="showPage('chat')">채팅</button>
            <button class="nav-btn" onclick="showPage('my-page')">내 페이지</button>
        </div>
    </div>

    <!-- 채팅 페이지 -->
    <div class="container" id="chat">
        <div class="header">
            <h2>채팅</h2>
        </div>
        <ul class="chat-list" id="chat-list"></ul>
        <div class="navigation">
            <button class="nav-btn" onclick="showPage('friends-list')">친구 목록</button>
            <button class="nav-btn" onclick="showPage('my-page')">내 페이지</button>
        </div>
    </div>

    <!-- 내 페이지 -->
    <div class="container" id="my-page">
        <div class="header">
            <h2>내 페이지</h2>
        </div>
        <p class="my-page">여기에 내 페이지 내용을 추가하세요.</p>
        <div class="navigation">
            <button class="nav-btn" onclick="showPage('friends-list')">친구 목록</button>
            <button class="nav-btn" onclick="showPage('chat')">채팅</button>
        </div>
    </div>

    <!-- 대화 창 -->
    <div class="container" id="chat-window">
        <button class="back-button" onclick="goBack()">&#60; 뒤로가기</button>
        <div class="header">
            <h2 id="chat-header">대화</h2>
        </div>
        <ul class="messages" id="messages"></ul>
        <div class="message-input">
            <input type="text" id="message-input" placeholder="메시지를 입력하세요...">
            <button onclick="sendMessage()">전송</button>
        </div>
    </div>

    <script>
        let friends = [];

        function showPage(page) {
            // 모든 페이지 숨기기
            document.querySelectorAll('.container').forEach(container => {
                container.classList.remove('active');
            });
            // 선택된 페이지 활성화
            document.getElementById(page).classList.add('active');
            // 대화창 숨김
            document.getElementById('chat-window').classList.remove('active');
        }

        function addFriend() {
            const friendName = document.getElementById('friend-name').value.trim();
            if (friendName) {
                friends.push(friendName);
                document.getElementById('friend-name').value = ''; // 입력란 초기화
                updateFriendList();
                updateChatList();
            }
        }

        function updateFriendList() {
            const friendsList = document.getElementById('friends');
            friendsList.innerHTML = ''; // 기존 친구 목록 초기화

            friends.forEach(friend => {
                const li = document.createElement('li');
                li.className = 'chat-item';
                li.innerHTML = `
                    <div class="chat-avatar"></div>
                    <div class="chat-info">
                        <h3 onclick="openChat('${friend}')">${friend}</h3>
                        <p>최근 메시지 내용...</p>
                    </div>
                `;
                friendsList.appendChild(li);
            });
        }

        function updateChatList() {
            const chatList = document.getElementById('chat-list');
            chatList.innerHTML = ''; // 기존 채팅 목록 초기화

            friends.forEach(friend => {
                const li = document.createElement('li');
                li.className = 'chat-item';
                li.innerHTML = `
                    <div class="chat-avatar"></div>
                    <div class="chat-info">
                        <h3 onclick="openChat('${friend}')">${friend}</h3>
                        <p>대화 내용...</p>
                    </div>
                `;
                chatList.appendChild(li);
            });
        }

        function openChat(friend) {
            const chatWindow = document.getElementById('chat-window');
            const chatHeader = document.getElementById('chat-header');
            const messagesList = document.getElementById('messages');
            messagesList.innerHTML = ''; // 기존 메시지 초기화
            chatHeader.innerText = `${friend}와의 대화`;
            chatWindow.classList.add('active'); // 채팅창 표시
            showPage('chat-window'); // 채팅창으로 이동
        }

        function goBack() {
            const chatWindow = document.getElementById('chat-window');
            chatWindow.classList.remove('active'); // 채팅창 숨김
            showPage('chat'); // 채팅 페이지로 이동
        }

        function sendMessage() {
            const messageInput = document.getElementById('message-input');
            const message = messageInput.value.trim();

            if (message) {
                const messagesList = document.getElementById('messages');
                const li = document.createElement('li');
                li.className = 'message-item';
                li.innerText = message;
                messagesList.appendChild(li);
                messageInput.value = ''; // 입력란 초기화
                messagesList.scrollTop = messagesList.scrollHeight; // 스크롤을 아래로 이동
            }
        }

        function startGroupChat() {
            if (friends.length < 2) {
                alert("두 명 이상의 친구를 선택해야 그룹 채팅을 시작할 수 있습니다.");
                return;
            }
            const chatWindow = document.getElementById('chat-window');
            const chatHeader = document.getElementById('chat-header');
            const messagesList = document.getElementById('messages');
            messagesList.innerHTML = '<li class="message-item">그룹 채팅이 시작되었습니다!</li>';
            chatHeader.innerText = '그룹 채팅';
            chatWindow.classList.add('active'); // 채팅창 표시
            showPage('chat-window'); // 채팅창으로 이동
        }
    </script>

</body>
</html>
